/* tslint:disable */
/* eslint-disable */
/**
 * CleanArchitecture
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface MessageModel
 */
export interface MessageModel {
    /**
     * 
     * @type {any}
     * @memberof MessageModel
     */
    consignment?: any | null;
    /**
     * 
     * @type {any}
     * @memberof MessageModel
     */
    created: any | null;
    /**
     * 
     * @type {any}
     * @memberof MessageModel
     */
    id: any | null;
    /**
     * 
     * @type {any}
     * @memberof MessageModel
     */
    message?: any | null;
    /**
     * 
     * @type {any}
     * @memberof MessageModel
     */
    planning?: any | null;
    /**
     * 
     * @type {any}
     * @memberof MessageModel
     */
    shipment?: any | null;
    /**
     * 
     * @type {any}
     * @memberof MessageModel
     */
    type: MessageModelTypeEnum;
    /**
     * 
     * @type {any}
     * @memberof MessageModel
     */
    user?: any | null;
}


/**
 * @export
 */
export const MessageModelTypeEnum = {
    ShipmentCreated: 'SHIPMENT_CREATED',
    ShipmentUpdated: 'SHIPMENT_UPDATED',
    PlanningCreated: 'PLANNING_CREATED',
    PlanningUpdated: 'PLANNING_UPDATED',
    AccessCodeCreated: 'ACCESS_CODE_CREATED',
    PartOfAccessCodeCreated: 'PART_OF_ACCESS_CODE_CREATED',
    Ecmr: 'ECMR',
    NotificationSent: 'NOTIFICATION_SENT',
    Excise: 'EXCISE',
    AccessCodeShared: 'ACCESS_CODE_SHARED',
    PartOfAccessCodeShared: 'PART_OF_ACCESS_CODE_SHARED'
} as const;
export type MessageModelTypeEnum = typeof MessageModelTypeEnum[keyof typeof MessageModelTypeEnum];


/**
 * Check if a given object implements the MessageModel interface.
 */
export function instanceOfMessageModel(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "created" in value;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "type" in value;

    return isInstance;
}

export function MessageModelFromJSON(json: any): MessageModel {
    return MessageModelFromJSONTyped(json, false);
}

export function MessageModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): MessageModel {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'consignment': !exists(json, 'consignment') ? undefined : json['consignment'],
        'created': json['created'],
        'id': json['id'],
        'message': !exists(json, 'message') ? undefined : json['message'],
        'planning': !exists(json, 'planning') ? undefined : json['planning'],
        'shipment': !exists(json, 'shipment') ? undefined : json['shipment'],
        'type': json['type'],
        'user': !exists(json, 'user') ? undefined : json['user'],
    };
}

export function MessageModelToJSON(value?: MessageModel | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'consignment': value.consignment,
        'created': value.created,
        'id': value.id,
        'message': value.message,
        'planning': value.planning,
        'shipment': value.shipment,
        'type': value.type,
        'user': value.user,
    };
}

