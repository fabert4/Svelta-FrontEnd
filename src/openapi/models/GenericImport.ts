/* tslint:disable */
/* eslint-disable */
/**
 * CleanArchitecture
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface GenericImport
 */
export interface GenericImport {
    /**
     * 
     * @type {any}
     * @memberof GenericImport
     */
    conversionType: GenericImportConversionTypeEnum;
    /**
     * 
     * @type {any}
     * @memberof GenericImport
     */
    data: any | null;
}


/**
 * @export
 */
export const GenericImportConversionTypeEnum = {
    VanoersOrder: 'VANOERS_ORDER',
    BosdaalenTransfer: 'BOSDAALEN_TRANSFER',
    GraphqlShipment: 'GRAPHQL_SHIPMENT',
    GraphqlStatus: 'GRAPHQL_STATUS',
    OldenburgerEmballage: 'OLDENBURGER_EMBALLAGE',
    CobanaFrachtauftrage: 'COBANA_FRACHTAUFTRAGE',
    GetruTripdata: 'GETRU_TRIPDATA',
    OldenburgerTransfer: 'OLDENBURGER_TRANSFER',
    UblForwardingInstructions: 'UBL_FORWARDING_INSTRUCTIONS',
    DouaneForwardingInstructions: 'DOUANE_FORWARDING_INSTRUCTIONS',
    SluyterTransfer: 'SLUYTER_TRANSFER',
    OldenburgerNorgeTransfer: 'OLDENBURGER_NORGE_TRANSFER',
    BergeijkTransfer: 'BERGEIJK_TRANSFER',
    HzlogisticsTransfer: 'HZLOGISTICS_TRANSFER',
    VdhlogisticsTransfer: 'VDHLOGISTICS_TRANSFER'
} as const;
export type GenericImportConversionTypeEnum = typeof GenericImportConversionTypeEnum[keyof typeof GenericImportConversionTypeEnum];


/**
 * Check if a given object implements the GenericImport interface.
 */
export function instanceOfGenericImport(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "conversionType" in value;
    isInstance = isInstance && "data" in value;

    return isInstance;
}

export function GenericImportFromJSON(json: any): GenericImport {
    return GenericImportFromJSONTyped(json, false);
}

export function GenericImportFromJSONTyped(json: any, ignoreDiscriminator: boolean): GenericImport {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'conversionType': json['conversionType'],
        'data': json['data'],
    };
}

export function GenericImportToJSON(value?: GenericImport | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'conversionType': value.conversionType,
        'data': value.data,
    };
}

