/* tslint:disable */
/* eslint-disable */
/**
 * CleanArchitecture
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ActivityModel
 */
export interface ActivityModel {
    /**
     * 
     * @type {any}
     * @memberof ActivityModel
     */
    action: ActivityModelActionEnum;
    /**
     * 
     * @type {any}
     * @memberof ActivityModel
     */
    consignment?: any | null;
    /**
     * 
     * @type {any}
     * @memberof ActivityModel
     */
    id: any | null;
    /**
     * 
     * @type {any}
     * @memberof ActivityModel
     */
    identifier?: any | null;
    /**
     * 
     * @type {any}
     * @memberof ActivityModel
     */
    requirements: any | null;
    /**
     * 
     * @type {any}
     * @memberof ActivityModel
     */
    statusType: ActivityModelStatusTypeEnum;
    /**
     * 
     * @type {any}
     * @memberof ActivityModel
     */
    statuses: any | null;
}


/**
 * @export
 */
export const ActivityModelActionEnum = {
    Load: 'LOAD',
    Unload: 'UNLOAD',
    Attach: 'ATTACH',
    Detach: 'DETACH'
} as const;
export type ActivityModelActionEnum = typeof ActivityModelActionEnum[keyof typeof ActivityModelActionEnum];

/**
 * @export
 */
export const ActivityModelStatusTypeEnum = {
    Pickup: 'PICKUP',
    Delivery: 'DELIVERY',
    CrossdockPickup: 'CROSSDOCK_PICKUP',
    CrossdockDelivery: 'CROSSDOCK_DELIVERY',
    PickupStarted: 'PICKUP_STARTED',
    DeliveryStarted: 'DELIVERY_STARTED',
    CrossdockPickupStarted: 'CROSSDOCK_PICKUP_STARTED',
    CrossdockDeliveryStarted: 'CROSSDOCK_DELIVERY_STARTED',
    OnRoute: 'ON_ROUTE'
} as const;
export type ActivityModelStatusTypeEnum = typeof ActivityModelStatusTypeEnum[keyof typeof ActivityModelStatusTypeEnum];


/**
 * Check if a given object implements the ActivityModel interface.
 */
export function instanceOfActivityModel(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "action" in value;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "requirements" in value;
    isInstance = isInstance && "statusType" in value;
    isInstance = isInstance && "statuses" in value;

    return isInstance;
}

export function ActivityModelFromJSON(json: any): ActivityModel {
    return ActivityModelFromJSONTyped(json, false);
}

export function ActivityModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): ActivityModel {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'action': json['action'],
        'consignment': !exists(json, 'consignment') ? undefined : json['consignment'],
        'id': json['id'],
        'identifier': !exists(json, 'identifier') ? undefined : json['identifier'],
        'requirements': json['requirements'],
        'statusType': json['statusType'],
        'statuses': json['statuses'],
    };
}

export function ActivityModelToJSON(value?: ActivityModel | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'action': value.action,
        'consignment': value.consignment,
        'id': value.id,
        'identifier': value.identifier,
        'requirements': value.requirements,
        'statusType': value.statusType,
        'statuses': value.statuses,
    };
}

