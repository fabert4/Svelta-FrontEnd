/* tslint:disable */
/* eslint-disable */
/**
 * CleanArchitecture
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface Pagination
 */
export interface Pagination {
    /**
     * 
     * @type {any}
     * @memberof Pagination
     */
    itemsPerPage: any | null;
    /**
     * 
     * @type {any}
     * @memberof Pagination
     */
    page: any | null;
    /**
     * 
     * @type {any}
     * @memberof Pagination
     */
    period?: any | null;
    /**
     * 
     * @type {any}
     * @memberof Pagination
     */
    search?: any | null;
    /**
     * 
     * @type {any}
     * @memberof Pagination
     */
    sort?: any | null;
}

/**
 * Check if a given object implements the Pagination interface.
 */
export function instanceOfPagination(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "itemsPerPage" in value;
    isInstance = isInstance && "page" in value;

    return isInstance;
}

export function PaginationFromJSON(json: any): Pagination {
    return PaginationFromJSONTyped(json, false);
}

export function PaginationFromJSONTyped(json: any, ignoreDiscriminator: boolean): Pagination {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'itemsPerPage': json['itemsPerPage'],
        'page': json['page'],
        'period': !exists(json, 'period') ? undefined : json['period'],
        'search': !exists(json, 'search') ? undefined : json['search'],
        'sort': !exists(json, 'sort') ? undefined : json['sort'],
    };
}

export function PaginationToJSON(value?: Pagination | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'itemsPerPage': value.itemsPerPage,
        'page': value.page,
        'period': value.period,
        'search': value.search,
        'sort': value.sort,
    };
}

