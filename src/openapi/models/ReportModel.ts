/* tslint:disable */
/* eslint-disable */
/**
 * CleanArchitecture
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ReportFinished } from './ReportFinished';
import {
    ReportFinishedFromJSON,
    ReportFinishedFromJSONTyped,
    ReportFinishedToJSON,
} from './ReportFinished';
import type { StatusPaginationResult } from './StatusPaginationResult';
import {
    StatusPaginationResultFromJSON,
    StatusPaginationResultFromJSONTyped,
    StatusPaginationResultToJSON,
} from './StatusPaginationResult';

/**
 * 
 * @export
 * @interface ReportModel
 */
export interface ReportModel {
    /**
     * 
     * @type {any}
     * @memberof ReportModel
     */
    ecmr?: any | null;
    /**
     * 
     * @type {any}
     * @memberof ReportModel
     */
    emailCount: any | null;
    /**
     * 
     * @type {any}
     * @memberof ReportModel
     */
    importedConversionsCount: any | null;
    /**
     * 
     * @type {ReportFinished}
     * @memberof ReportModel
     */
    planning: ReportFinished;
    /**
     * 
     * @type {ReportFinished}
     * @memberof ReportModel
     */
    shipment: ReportFinished;
    /**
     * 
     * @type {any}
     * @memberof ReportModel
     */
    smsCount: any | null;
    /**
     * 
     * @type {StatusPaginationResult}
     * @memberof ReportModel
     */
    statuses: StatusPaginationResult;
    /**
     * 
     * @type {any}
     * @memberof ReportModel
     */
    users: any | null;
}

/**
 * Check if a given object implements the ReportModel interface.
 */
export function instanceOfReportModel(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "emailCount" in value;
    isInstance = isInstance && "importedConversionsCount" in value;
    isInstance = isInstance && "planning" in value;
    isInstance = isInstance && "shipment" in value;
    isInstance = isInstance && "smsCount" in value;
    isInstance = isInstance && "statuses" in value;
    isInstance = isInstance && "users" in value;

    return isInstance;
}

export function ReportModelFromJSON(json: any): ReportModel {
    return ReportModelFromJSONTyped(json, false);
}

export function ReportModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): ReportModel {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'ecmr': !exists(json, 'ecmr') ? undefined : json['ecmr'],
        'emailCount': json['emailCount'],
        'importedConversionsCount': json['importedConversionsCount'],
        'planning': ReportFinishedFromJSON(json['planning']),
        'shipment': ReportFinishedFromJSON(json['shipment']),
        'smsCount': json['smsCount'],
        'statuses': StatusPaginationResultFromJSON(json['statuses']),
        'users': json['users'],
    };
}

export function ReportModelToJSON(value?: ReportModel | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'ecmr': value.ecmr,
        'emailCount': value.emailCount,
        'importedConversionsCount': value.importedConversionsCount,
        'planning': ReportFinishedToJSON(value.planning),
        'shipment': ReportFinishedToJSON(value.shipment),
        'smsCount': value.smsCount,
        'statuses': StatusPaginationResultToJSON(value.statuses),
        'users': value.users,
    };
}

