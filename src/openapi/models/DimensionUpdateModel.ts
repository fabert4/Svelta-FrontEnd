/* tslint:disable */
/* eslint-disable */
/**
 * CleanArchitecture
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface DimensionUpdateModel
 */
export interface DimensionUpdateModel {
    /**
     * 
     * @type {any}
     * @memberof DimensionUpdateModel
     */
    attributeId?: any | null;
    /**
     * 
     * @type {any}
     * @memberof DimensionUpdateModel
     */
    id: any | null;
    /**
     * 
     * @type {any}
     * @memberof DimensionUpdateModel
     */
    unitCode?: any | null;
    /**
     * 
     * @type {any}
     * @memberof DimensionUpdateModel
     */
    value: any | null;
}

/**
 * Check if a given object implements the DimensionUpdateModel interface.
 */
export function instanceOfDimensionUpdateModel(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "value" in value;

    return isInstance;
}

export function DimensionUpdateModelFromJSON(json: any): DimensionUpdateModel {
    return DimensionUpdateModelFromJSONTyped(json, false);
}

export function DimensionUpdateModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): DimensionUpdateModel {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'attributeId': !exists(json, 'attributeId') ? undefined : json['attributeId'],
        'id': json['id'],
        'unitCode': !exists(json, 'unitCode') ? undefined : json['unitCode'],
        'value': json['value'],
    };
}

export function DimensionUpdateModelToJSON(value?: DimensionUpdateModel | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'attributeId': value.attributeId,
        'id': value.id,
        'unitCode': value.unitCode,
        'value': value.value,
    };
}

