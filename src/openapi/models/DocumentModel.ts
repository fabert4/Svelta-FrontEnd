/* tslint:disable */
/* eslint-disable */
/**
 * CleanArchitecture
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface DocumentModel
 */
export interface DocumentModel {
    /**
     * 
     * @type {any}
     * @memberof DocumentModel
     */
    base64: any | null;
    /**
     * 
     * @type {any}
     * @memberof DocumentModel
     */
    id: any | null;
    /**
     * 
     * @type {any}
     * @memberof DocumentModel
     */
    meta?: any | null;
    /**
     * 
     * @type {any}
     * @memberof DocumentModel
     */
    mime: any | null;
    /**
     * 
     * @type {any}
     * @memberof DocumentModel
     */
    name: any | null;
    /**
     * 
     * @type {any}
     * @memberof DocumentModel
     */
    type: DocumentModelTypeEnum;
}


/**
 * @export
 */
export const DocumentModelTypeEnum = {
    Image: 'IMAGE',
    Document: 'DOCUMENT',
    Signature: 'SIGNATURE',
    ECmr: 'eCMR',
    Vagd: 'VAGD'
} as const;
export type DocumentModelTypeEnum = typeof DocumentModelTypeEnum[keyof typeof DocumentModelTypeEnum];


/**
 * Check if a given object implements the DocumentModel interface.
 */
export function instanceOfDocumentModel(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "base64" in value;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "mime" in value;
    isInstance = isInstance && "name" in value;
    isInstance = isInstance && "type" in value;

    return isInstance;
}

export function DocumentModelFromJSON(json: any): DocumentModel {
    return DocumentModelFromJSONTyped(json, false);
}

export function DocumentModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): DocumentModel {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'base64': json['base64'],
        'id': json['id'],
        'meta': !exists(json, 'meta') ? undefined : json['meta'],
        'mime': json['mime'],
        'name': json['name'],
        'type': json['type'],
    };
}

export function DocumentModelToJSON(value?: DocumentModel | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'base64': value.base64,
        'id': value.id,
        'meta': value.meta,
        'mime': value.mime,
        'name': value.name,
        'type': value.type,
    };
}

