/* tslint:disable */
/* eslint-disable */
/**
 * CleanArchitecture
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { Email } from './Email';
import {
    EmailFromJSON,
    EmailFromJSONTyped,
    EmailToJSON,
} from './Email';
import type { NewPassword } from './NewPassword';
import {
    NewPasswordFromJSON,
    NewPasswordFromJSONTyped,
    NewPasswordToJSON,
} from './NewPassword';

/**
 * 
 * @export
 * @interface CreateUserModel
 */
export interface CreateUserModel {
    /**
     * 
     * @type {any}
     * @memberof CreateUserModel
     */
    authorities: any | null;
    /**
     * 
     * @type {Email}
     * @memberof CreateUserModel
     */
    email: Email;
    /**
     * 
     * @type {any}
     * @memberof CreateUserModel
     */
    locked: any | null;
    /**
     * 
     * @type {NewPassword}
     * @memberof CreateUserModel
     */
    password: NewPassword;
}

/**
 * Check if a given object implements the CreateUserModel interface.
 */
export function instanceOfCreateUserModel(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "authorities" in value;
    isInstance = isInstance && "email" in value;
    isInstance = isInstance && "locked" in value;
    isInstance = isInstance && "password" in value;

    return isInstance;
}

export function CreateUserModelFromJSON(json: any): CreateUserModel {
    return CreateUserModelFromJSONTyped(json, false);
}

export function CreateUserModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateUserModel {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'authorities': json['authorities'],
        'email': EmailFromJSON(json['email']),
        'locked': json['locked'],
        'password': NewPasswordFromJSON(json['password']),
    };
}

export function CreateUserModelToJSON(value?: CreateUserModel | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'authorities': value.authorities,
        'email': EmailToJSON(value.email),
        'locked': value.locked,
        'password': NewPasswordToJSON(value.password),
    };
}

