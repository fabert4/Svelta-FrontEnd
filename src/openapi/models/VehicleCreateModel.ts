/* tslint:disable */
/* eslint-disable */
/**
 * CleanArchitecture
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface VehicleCreateModel
 */
export interface VehicleCreateModel {
    /**
     * 
     * @type {any}
     * @memberof VehicleCreateModel
     */
    description?: any | null;
    /**
     * 
     * @type {any}
     * @memberof VehicleCreateModel
     */
    licensePlate?: any | null;
    /**
     * 
     * @type {any}
     * @memberof VehicleCreateModel
     */
    type: VehicleCreateModelTypeEnum;
}


/**
 * @export
 */
export const VehicleCreateModelTypeEnum = {
    Truck: 'TRUCK',
    Trailer: 'TRAILER'
} as const;
export type VehicleCreateModelTypeEnum = typeof VehicleCreateModelTypeEnum[keyof typeof VehicleCreateModelTypeEnum];


/**
 * Check if a given object implements the VehicleCreateModel interface.
 */
export function instanceOfVehicleCreateModel(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "type" in value;

    return isInstance;
}

export function VehicleCreateModelFromJSON(json: any): VehicleCreateModel {
    return VehicleCreateModelFromJSONTyped(json, false);
}

export function VehicleCreateModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): VehicleCreateModel {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'description': !exists(json, 'description') ? undefined : json['description'],
        'licensePlate': !exists(json, 'licensePlate') ? undefined : json['licensePlate'],
        'type': json['type'],
    };
}

export function VehicleCreateModelToJSON(value?: VehicleCreateModel | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'description': value.description,
        'licensePlate': value.licensePlate,
        'type': value.type,
    };
}

