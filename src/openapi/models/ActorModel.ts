/* tslint:disable */
/* eslint-disable */
/**
 * CleanArchitecture
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ActionModel } from './ActionModel';
import {
    ActionModelFromJSON,
    ActionModelFromJSONTyped,
    ActionModelToJSON,
} from './ActionModel';
import type { ShipmentCompanyModel } from './ShipmentCompanyModel';
import {
    ShipmentCompanyModelFromJSON,
    ShipmentCompanyModelFromJSONTyped,
    ShipmentCompanyModelToJSON,
} from './ShipmentCompanyModel';

/**
 * 
 * @export
 * @interface ActorModel
 */
export interface ActorModel {
    /**
     * 
     * @type {ShipmentCompanyModel}
     * @memberof ActorModel
     */
    company: ShipmentCompanyModel;
    /**
     * 
     * @type {any}
     * @memberof ActorModel
     */
    consignment?: any | null;
    /**
     * 
     * @type {ActionModel}
     * @memberof ActorModel
     */
    delivery: ActionModel;
    /**
     * 
     * @type {any}
     * @memberof ActorModel
     */
    id: any | null;
    /**
     * 
     * @type {ActionModel}
     * @memberof ActorModel
     */
    pickup: ActionModel;
    /**
     * 
     * @type {any}
     * @memberof ActorModel
     */
    price?: any | null;
    /**
     * 
     * @type {any}
     * @memberof ActorModel
     */
    progresses?: any | null;
}

/**
 * Check if a given object implements the ActorModel interface.
 */
export function instanceOfActorModel(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "company" in value;
    isInstance = isInstance && "delivery" in value;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "pickup" in value;

    return isInstance;
}

export function ActorModelFromJSON(json: any): ActorModel {
    return ActorModelFromJSONTyped(json, false);
}

export function ActorModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): ActorModel {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'company': ShipmentCompanyModelFromJSON(json['company']),
        'consignment': !exists(json, 'consignment') ? undefined : json['consignment'],
        'delivery': ActionModelFromJSON(json['delivery']),
        'id': json['id'],
        'pickup': ActionModelFromJSON(json['pickup']),
        'price': !exists(json, 'price') ? undefined : json['price'],
        'progresses': !exists(json, 'progresses') ? undefined : json['progresses'],
    };
}

export function ActorModelToJSON(value?: ActorModel | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'company': ShipmentCompanyModelToJSON(value.company),
        'consignment': value.consignment,
        'delivery': ActionModelToJSON(value.delivery),
        'id': value.id,
        'pickup': ActionModelToJSON(value.pickup),
        'price': value.price,
        'progresses': value.progresses,
    };
}

